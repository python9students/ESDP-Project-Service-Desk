# Generated by Django 4.0.3 on 2022-04-13 01:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('short_name', models.CharField(max_length=50, verbose_name='Сокращенное название')),
                ('website', models.URLField(blank=True, max_length=255, verbose_name='Вебсайт')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Адрес')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clients', to='ticket.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'db_table': 'client',
            },
        ),
        migrations.CreateModel(
            name='CompanyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип компании',
                'verbose_name_plural': 'Типы компаний',
                'db_table': 'company_type',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='ServiceObjectModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Модель объекта обслуживания',
                'verbose_name_plural': 'Модели объектов обслуживания',
                'db_table': 'service_object_model',
            },
        ),
        migrations.CreateModel(
            name='ServiceObjectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип объекта обслуживания',
                'verbose_name_plural': 'Типы объектов обслуживания',
                'db_table': 'service_object_type',
            },
        ),
        migrations.CreateModel(
            name='Service_Object',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=255, unique=True, verbose_name='Серийный номер')),
                ('is_installed', models.BooleanField(default=False, verbose_name='Установлен')),
                ('active_from', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Действителен с')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Адрес')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_objects', to='ticket.city', verbose_name='Город')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_objects', to='ticket.client', verbose_name='Клиент')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_objects', to='ticket.country', verbose_name='Страна')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_objects', to='ticket.serviceobjectmodel', verbose_name='Модель')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_objects', to='ticket.serviceobjecttype', verbose_name='Тип объекта обслуживания')),
            ],
            options={
                'verbose_name': 'Объект обслуживания',
                'verbose_name_plural': 'Объекты обслуживания',
                'db_table': 'service_object',
            },
        ),
        migrations.AddField(
            model_name='client',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clients', to='ticket.country', verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='client',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clients', to='ticket.companytype', verbose_name='Тип компании'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='ticket.country', verbose_name='Страна'),
        ),
    ]
